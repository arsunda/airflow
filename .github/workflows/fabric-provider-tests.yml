---
name: System dashboard workflow for Microsoft Fabric
on:  # yamllint disable-line rule:truthy
  # schedule:
    # - cron: "0 */2 * * *"  # Runs every 2 hours
  workflow_dispatch:  # Allows manual triggering
jobs:
  setup-azure-cli:
    uses: ./.github/workflows/install-azure-cli.yml

  rebase:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically generated by the Github,
      # for each workflow run, used to authenticate the workflow to interact with Github API
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AIRFLOW_FORK_TOKEN }} # Custom PAT stored in repository's secret
          # to interact with fork of Airflow repository.
          persist-credentials: false

      # Later on set it as common step
      - name: Set Up Git
        run: |
          git config --global user.name "Ambika Garg"
          git config --global user.email "ambikagarg1101@gmail.com"

      - name: Git Pull
        run: |
          git pull
          git branch -a

      - name: Fetch Upstream
        run: |
          if ! git remote | grep -q "upstream"; then
            git remote add upstream https://github.com/apache/airflow.git
          fi
          git fetch upstream

      - name: Rebase Dev-Fork with Upstream
        run: |
          git checkout dev-fabric
      #     git rebase upstream/main
      #     git push https://${{ secrets.AIRFLOW_FORK_TOKEN }}@github.com/ambika-garg/airflow.git \
      #     dev-fabric --force-with-lease

      - name: Install Breeze
        uses: ./.github/actions/breeze
      - name: Run System Tests for Microsoft Fabric Provider
        id: system-tests-for-microsoft-fabric
        env:
          SYSTEM_TESTS_FABRIC_DATASET_ID: "${{ secrets.DATASET_ID }}"
          SYSTEM_TESTS_FABRIC_GROUP_ID: "${{ secrets.GROUP_ID }}"
          SYSTEM_TESTS_FABRIC_CLIENT_ID: "${{ secrets.CLIENT_ID }}"
          SYSTEM_TESTS_FABRIC_REFRESH_TOKEN: "${{ secrets.REFRESH_TOKEN }}"
          SYSTEM_TESTS_FABRIC_TENANT_ID: "${{ secrets.TENANT_ID }}"
        run: |
          export BREEZE_INIT_COMMAND="export SYSTEM_TESTS_FABRIC_CLIENT_ID=${SYSTEM_TESTS_FABRIC_CLIENT_ID} \
            && export SYSTEM_TESTS_FABRIC_REFRESH_TOKEN=${SYSTEM_TESTS_FABRIC_REFRESH_TOKEN} \
            && export SYSTEM_TESTS_FABRIC_TENANT_ID=${SYSTEM_TESTS_FABRIC_TENANT_ID}"

          breeze ci-image build
          
          breeze testing system-tests --verbose \
          providers/tests/system/microsoft/fabric/example_fabric_notebook_run.py \
          providers/tests/system/microsoft/fabric/example_fabric_pipeline_run.py \
          --junitxml=tests/pytest-report.xml

      - name: Upload Raw System Test Report to Github artifact storage
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: pytest-report
          path: tests/pytest-report.xml  # path of the file to upload

      - name: Upload System Test Report to Azure Blob Storage
        env: 
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          BRONZE_AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.BRONZE_AZURE_STORAGE_CONTAINER_NAME }}
        run: |
          az storage blob upload \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --container-name $BRONZE_AZURE_STORAGE_CONTAINER_NAME \
            --name pytest-report.xml \
            --file tests/pytest-report.xml \
            --auth-mode key \
            --account-key $AZURE_STORAGE_KEY \
            --overwrite=True

  preprocess:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      GOLD_AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.GOLD_AZURE_STORAGE_CONTAINER_NAME }}
      SILVER_AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.SILVER_AZURE_STORAGE_CONTAINER_NAME }}
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.repository }}
      GITHUB_RUN_ID: ${{ github.run_id }}
    needs: rebase
    if: success() || failure()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AIRFLOW_FORK_TOKEN }}
          persist-credentials: false

      - name: Set Up Git
        run: |
          git config --global user.name "Ambika Garg"
          git config --global user.email "ambikagarg1101@gmail.com"

      - name: Download System Test Report
        uses: actions/download-artifact@v4
        with:
          name: pytest-report
          path: pytest-report

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install azure-storage-blob azure-identity

      - name: Convert xml report to json format and upload it to Azure Blob Storage
        run: |
          python .github/scripts/process_artifact.py

      - name: Consolidate last k runs and upload to Azure Blob Storage
        run: |
          python .github/scripts/process_last_k_runs.py

  display-system-tests:
    runs-on: ubuntu-latest
    needs: preprocess
    if: success() || failure()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AIRFLOW_FORK_TOKEN }}
          persist-credentials: false

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Step 2: Download the file from Azure Blob Storage
      - name: Download Consolidated-K-Run Report from Azure Storage
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          GOLD_AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.GOLD_AZURE_STORAGE_CONTAINER_NAME }}
        run: |
          az storage blob download \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --account-key $AZURE_STORAGE_KEY \
            --container-name $GOLD_AZURE_STORAGE_CONTAINER_NAME \
            --name gold-report.json \
            --file ./report.json

      - name: Push Test file to Dashboard Repo
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.AIRFLOW_FORK_TOKEN }}
        with:
          source_file: 'report.json'
          destination_repo: 'ambika-garg/fabric-airflow-system-dashboard'
          destination_folder: '_data'
          user_email: 'ambikagarg1101@gmail.com'
          user_name: 'Ambika Garg'
          commit_message: 'Add test report to dashboard repo'
